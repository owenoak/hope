/* including macros */
.noTapHighlight {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
/* shadow from above */
.verticalShadow {
  box-shadow: 0px 3px 7px rgba(0, 0, 0, 0.8);
  -moz-box-shadow: 0px 3px 7px rgba(0, 0, 0, 0.8);
  -webkit-box-shadow: 0px 3px 7px rgba(0, 0, 0, 0.8);
}
.fieldShadow {
  -moz-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.9);
  -webkit-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.9);
}
.outsetShadow {
  -moz-box-shadow: inset 0 -1px 3px rgba(0, 0, 0, 0.9);
  -webkit-box-shadow: inset 0 -1px 3px rgba(0, 0, 0, 0.9);
}
.insetPanel {
  -moz-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.9);
  -webkit-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.9);
  background: rgba(255, 255, 255, 0.3);
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  border-radius: 10px;
  padding: 2px;
}
.insetPanelHeader {
  padding: 5px;
}
.insetPanelContainer {
  -webkit-border-radius: 8px;
  -moz-border-radius: 8px;
  border-radius: 8px;
  background: rgba(255, 255, 255, 0.3);
  padding: 10px;
}
/* standard button height/line-height */
.button-ish {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  display: inline-block;
  height: 30px;
  line-height: 29px;
}
.boxChild {
  display: block;
  position: relative;
  box-flex: 0;
  -webkit-box-flex: 0;
  -moz-box-flex: 0;
}
.hCenterBox {
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: horizontal;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-align: start;
  -webkit-box-align: start;
  -moz-box-align: start;
  box-pack: center;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  -webkit-box-flex: 0;
  -moz-box-flex: 0;
  box-flex: 0;
}
.vCenterBox {
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: center;
  -webkit-box-align: center;
  -moz-box-align: center;
  box-pack: center;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  -webkit-box-flex: 0;
  -moz-box-flex: 0;
  box-flex: 0;
}
.noflex {
  -webkit-box-flex: 0;
  -moz-box-flex: 0;
  box-flex: 0;
}
.spring {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
}
.backgroundFullWidth {
  background-size: 100% 100%;
  -moz-background-size: 100% 100%;
  -webkit-background-size: 100% 100%;
}
.backgroundCover {
  background-repeat: no-repeat;
  background-size: cover;
  -moz-background-size: cover;
  -webkit-background-size: 100% 100%;
  -webkit-background-size: cover;
}
.backgroundContain {
  background-repeat: no-repeat;
  background-size: contain;
  -moz-background-size: contain;
  -webkit-background-size: 100% 100%;
  -webkit-background-size: contain;
}
.clearAppearance {
  -moz-appearance: none;
  -webkit-appearance: none;
}
/*** Generic css for hope project ***/
* {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -moz-user-select: -moz-none;
  -webkit-user-select: none;
}
html {
  width: 100%;
  height: 100%;
}
body {
  margin: 0px;
  width: 100%;
  height: 100%;
  line-height: 1.2;
}
table {
  font-size: inherit;
  font-style: inherit;
  font-variant: inherit;
  font-weight: inherit;
}
/* make input boxes selectable */
input {
  -moz-user-select: text;
  -webkit-user-select: text;
  line-height: 1.4;
}
textarea {
  -moz-user-select: text;
  -webkit-user-select: text;
}
/* add flex to an element by giving it a flex attribute */
*[flex] {
  -webkit-box-flex: 1 !important;
  -moz-box-flex: 1 !important;
  box-flex: 1 !important;
}
*[flex='1'] {
  -webkit-box-flex: 1 !important;
  -moz-box-flex: 1 !important;
  box-flex: 1 !important;
}
*[flex='2'] {
  -webkit-box-flex: 2 !important;
  -moz-box-flex: 2 !important;
  box-flex: 2 !important;
}
*[flex='3'] {
  -webkit-box-flex: 3 !important;
  -moz-box-flex: 3 !important;
  box-flex: 3 !important;
}
*[flex='4'] {
  -webkit-box-flex: 4 !important;
  -moz-box-flex: 4 !important;
  box-flex: 4 !important;
}
*[flex='5'] {
  -webkit-box-flex: 5 !important;
  -moz-box-flex: 5 !important;
  box-flex: 5 !important;
}
/* center (inline-block) children by adding @center attribute */
*[center] {
  text-align: center;
}
section,
container,
header,
footer,
ui,
border,
group,
notice,
panel,
title,
splitter {
  position: relative;
  display: block;
}
inline,
label,
output,
tabselector,
message {
  display: inline-block;
}
/*** horizontal and vertical stretch boxes ***/
vbox {
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
}
/*** Blocks of inline javascript or xml ***/
js,
properties,
set,
get,
on {
  display: none;
}
dataset {
  display: block;
}
/*** Generic attribute stuff ***/
/* hide things with [visible=no] */
*[visible=no] {
  display: none !important;
}
hcenter {
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: horizontal;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-align: start;
  -webkit-box-align: start;
  -moz-box-align: start;
  box-pack: center;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  -webkit-box-flex: 0;
  -moz-box-flex: 0;
  box-flex: 0;
}
vcenter {
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: center;
  -webkit-box-align: center;
  -moz-box-align: center;
  box-pack: center;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  -webkit-box-flex: 0;
  -moz-box-flex: 0;
  box-flex: 0;
}
/*** add scrolling (doesn't work on iOS -- YET)  ***/
*[scroll] {
  overflow-x: auto;
  overflow-y: auto;
}
*[scroll=horizontal] {
  overflow-x: auto;
  overflow-y: hidden;
}
*[scroll=vertical] {
  overflow-x: hidden;
  overflow-y: auto;
}
/*** generic mask, centers contents horizontally and vertically.  dark mask.  ***/
mask {
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: center;
  -webkit-box-align: center;
  -moz-box-align: center;
  box-pack: center;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  -webkit-box-flex: 0;
  -moz-box-flex: 0;
  box-flex: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.3);
}
/*** ad-hoc tables ***/
rows {
  display: table !important;
  width: 100%;
  border-collapse: collapse;
}
row {
  display: table-row !important;
  width: 100%;
}
row > * {
  display: table-cell !important;
  vertical-align: baseline;
}
row > row {
  display: table-row !important;
}
row > *[flex] {
  width: 100%;
}
cell {
  display: table-cell !important;
}
/*** Generic inputs ***/
input, textarea {
  -moz-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.9);
  -webkit-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.9);
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
  -moz-appearance: none;
  border: 0px;
  padding: 5px;
  margin: 2px 0;
}
input[appearance~=translucent] {
  background-color: rgba(255, 255, 255, 0.3);
  color: white;
}
/*** Search-style input ***/
.gecko input[type=search] {
  -moz-appearance: none;
  -webkit-appearance: none;
  -moz-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.9);
  -webkit-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.9);
  -webkit-border-radius: 12px;
  -moz-border-radius: 12px;
  border-radius: 12px;
  border: 0px;
  background: url(theme/ios/field-searchIcon.png) white no-repeat 5px center;
  color: black;
  min-height: 24px !important;
  padding-left: 30px;
  min-width: 80px;
}
input[type=search] {
  font-size: 18px;
  width: 180px;
  max-width: 180px;
}
/*** <ui> is the outer container of our user interface ***/
ui {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}
/*** [appearance=inset] for sections, editors, etc ***/
*[appearance~=inset] {
  -moz-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.9);
  -webkit-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.9);
  background: rgba(255, 255, 255, 0.3);
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  border-radius: 10px;
  padding: 2px;
}
*[appearance~=inset] > header {
  padding: 5px;
}
*[appearance~=inset] > container {
  -webkit-border-radius: 8px;
  -moz-border-radius: 8px;
  border-radius: 8px;
  background: rgba(255, 255, 255, 0.3);
  padding: 10px;
}
/* center and enlarge title of inset panel */
*[appearance~=inset] > header > label {
  display: block;
  font-weight: bold;
  text-align: center;
  font-size: 150%;
}
/*** Action elements - basically, buttons ***/
/* default for actions is to look like buttons */
action {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  display: inline-block;
  height: 30px;
  line-height: 29px;
  position: relative;
  border: 1px outset black;
  cursor: pointer;
  white-space: nowrap;
}
/* NOTE: default to black button look */
action {
  background-color: none;
  color: white;
  text-shadow: rgba(0, 0, 0, 0.4) 0px -1px 0;
  margin-left: 2px;
  margin-right: 2px;
}
action:hover {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-black-active.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-black-active.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-black-active.png) 0 5 0 5 repeat;
}
action:active, action.active {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-yellow.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-yellow.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-yellow.png) 0 5 0 5 repeat;
  color: black;
  text-shadow: rgba(255, 255, 255, 0.4) 0px -1px 0;
}
action[icon] {
  padding: 0 5px;
}
action[title] {
  padding: 0 10px;
}
action[icon][label] {
  padding: 0 5px;
}
action[icon][label] > icon {
  left: -3px;
}
action[appearance~=black], toolbar[appearance~=black] action {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-black.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-black.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-black.png) 0 5 0 5 repeat;
}
action[appearance~=black]:hover, toolbar[appearance~=black] action:hover {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-black-active.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-black-active.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-black-active.png) 0 5 0 5 repeat;
}
action[appearance~=black]:active,
action[appearance~=black].active,
toolbar[appearance~=black] action:active,
toolbar[appearance~=black] action.active {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-yellow-active.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-yellow-active.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-yellow-active.png) 0 5 0 5 repeat;
}
action[appearance~=blue] {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-blue.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-blue.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-blue.png) 0 5 0 5 repeat;
}
action[appearance~=blue]:active, action[appearance~=blue].active {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-blue-active.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-blue-active.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-blue-active.png) 0 5 0 5 repeat;
}
action[appearance~=blue][selected] {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-lightBlue.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-lightBlue.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-lightBlue.png) 0 5 0 5 repeat;
}
action[appearance~=blue][selected]:active, action[appearance~=blue][selected].active {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-lightBlue-active.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-lightBlue-active.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-lightBlue-active.png) 0 5 0 5 repeat;
}
action[appearance~=lightBlue] {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-lightBlue.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-lightBlue.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-lightBlue.png) 0 5 0 5 repeat;
}
action[appearance~=lightBlue]:active, action[appearance~=lightBlue].active {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-lightBlue-active.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-lightBlue-active.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-lightBlue-active.png) 0 5 0 5 repeat;
}
action[appearance~=red] {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-red.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-red.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-red.png) 0 5 0 5 repeat;
}
action[appearance~=red]:active, action[appearance~=red].active {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-red-active.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-red-active.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-red-active.png) 0 5 0 5 repeat;
}
action[appearance~=green] {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-green.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-green.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-green.png) 0 5 0 5 repeat;
}
action[appearance~=green]:active, action[appearance~=green].active {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-green-active.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-green-active.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-green-active.png) 0 5 0 5 repeat;
}
action[appearance~=yellow] {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-yellow.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-yellow.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-yellow.png) 0 5 0 5 repeat;
}
action[appearance~=yellow]:active, action[appearance~=yellow].active {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-yellow-active.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-yellow-active.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-yellow-active.png) 0 5 0 5 repeat;
}
action[appearance~=white] {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-white.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-white.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-white.png) 0 5 0 5 repeat;
}
action[appearance~=white]:active, action[appearance~=white].active {
  border-color: transparent;
  border-width: 0px 5px 0px 5px;
  border-image: url(theme/ios/btn-white-active.png) 0 5 0 5 repeat;
  -moz-border-image: url(theme/ios/btn-white-active.png) 0 5 0 5 repeat;
  -webkit-border-image: url(theme/ios/btn-white-active.png) 0 5 0 5 repeat;
}
action[appearance~=prev] {
  overflow: hidden;
  color: white;
  text-shadow: rgba(0, 0, 0, 0.4) 0px -1px 0;
  padding: 0;
  margin-right: 5px;
  text-align: center;
  border-color: transparent;
  border-width: 0px 13px 0px 17px;
  border-image: url(theme/ios/nav-back-black.png) 0 13 0 17 repeat;
  -moz-border-image: url(theme/ios/nav-back-black.png) 0 13 0 17 repeat;
  -webkit-border-image: url(theme/ios/nav-back-black.png) 0 13 0 17 repeat;
}
action[appearance~=prev]:active, action[appearance~=prev].active {
  border-color: transparent;
  border-width: 0px 13px 0px 17px;
  border-image: url(theme/ios/nav-back-black-active.png) 0 13 0 17 repeat;
  -moz-border-image: url(theme/ios/nav-back-black-active.png) 0 13 0 17 repeat;
  -webkit-border-image: url(theme/ios/nav-back-black-active.png) 0 13 0 17 repeat;
}
action[appearance~=next] {
  overflow: hidden;
  color: white;
  text-shadow: rgba(0, 0, 0, 0.4) 0px -1px 0;
  padding: 0px;
  margin-right: 5px;
  text-align: center;
  border-color: transparent;
  border-width: 0px 17px 0px 13px;
  border-image: url(theme/ios/nav-forward-black.png) 0 17 0 13 repeat;
  -moz-border-image: url(theme/ios/nav-forward-black.png) 0 17 0 13 repeat;
  -webkit-border-image: url(theme/ios/nav-forward-black.png) 0 17 0 13 repeat;
}
action[appearance~=next]:active, action[appearance~=next].active {
  border-color: transparent;
  border-width: 0px 17px 0px 13px;
  border-image: url(theme/ios/nav-forward-black-active.png) 0 17 0 13 repeat;
  -moz-border-image: url(theme/ios/nav-forward-black-active.png) 0 17 0 13 repeat;
  -webkit-border-image: url(theme/ios/nav-forward-black-active.png) 0 17 0 13 repeat;
}
/*** scroller for some content ***/
scroller {
  display: block;
  position: absolute;
  -webkit-transition: -webkit-transform cubic-bezier(0, 0, 0.25, 1) 0;
  cursor: move;
}
scroller[direction=vertical] {
  width: 100%;
  min-height: 100%;
}
scroller[direction=horizontal] {
  min-width: 100%;
  height: 100%;
}
scroller[direction=vertical].scrolling * {
  cursor: row-resize !important;
}
scroller[direction=horizontal].scrolling * {
  cursor: col-resize !important;
}
.gecko scroller {
  cursor: -moz-grab;
}
.gecko scroller.scrolling * {
  cursor: -moz-grabbing !important;
}
/* scrollbar track */
scroll-track {
  position: absolute;
  z-index: 10;
  pointer-events: none;
  overflow: hidden;
  -webkit-transition-duration: 300ms;
  -webkit-transition-delay: 0;
  -webkit-transition-property: opacity;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
}
scroll-track.horizontal {
  height: 6px;
  bottom: 0px;
  left: 0px;
  right: 0px;
}
scroll-track.vertical {
  top: 0px;
  right: 3px;
  bottom: 0px;
  width: 6px;
}
/* scrollbar thumb */
scroll-thumb {
  pointer-events: none;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-transition-timing-function: cubic-bezier(0, 0, 0.25, 1);
  -webkit-transition-delay: 0;
  -webkit-transition-property: all;
  -webkit-transform: translate3d(0, 0, 0);
  z-index: 10;
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  min-width: 6px;
  min-height: 6px;
  background: rgba(255, 255, 255, 0.4);
}
/* light appearance */
scroll-track[appearance~=dark] scroll-thumb {
  background: rgba(0, 0, 0, 0.7);
}
/*** Sections: can have header and footers ***/
section {
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
}
section > container {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
}
section > container > * {
  display: block;
}
/* if a section is supposed to scroll, scroll its contianer instead */
section[scroll=vertical] {
  overflow: hidden;
}
section[scroll=vertical] > container {
  overflow-y: auto;
}
/*** Editor: section subclass that manages item ***/
editor {
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
}
editor > container {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
}
editor > container > * {
  display: block;
}
editor > container > rows > row > label {
  text-align: right;
  padding-right: 5px;
}
/*** Stack: section which shows one item at a time ***/
stack {
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
}
stack > container {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
}
/*** ListViewer ***/
listviewer {
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
}
listviewer > container {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
  overflow-y: auto;
  overflow-x: hidden;
}
listviewer > container > rows {
  border-collapse: separate;
  table-layout: fixed;
}
listviewer > container > rows > row {
  cursor: pointer;
}
listviewer > container > rows > row[selected] > * {
  background: white;
}
listviewer > container > rows > row > label {
  padding: 7px 5px;
}
listviewer > container > rows > row > cell {
  padding: 7px 5px;
}
/*	inset look	*/
listviewer[appearance=inset] > container > rows > row > * {
  border-bottom: 1px solid #ccc;
  border-top: 1px solid #999;
  line-height: 1.5;
}
listviewer[appearance=inset] > container > rows > row:first-child > * {
  border-top-width: 0;
}
listviewer[appearance=inset] > container > rows > row[selected] {
  -moz-box-shadow: inset 0 -1px 3px rgba(0, 0, 0, 0.9);
  -webkit-box-shadow: inset 0 -1px 3px rgba(0, 0, 0, 0.9);
  background-color: rgba(255, 223, 71, 0.8);
  -webkit-border-radius: 3px;
  -moz-border-radius: 3px;
  border-radius: 3px;
  font-weight: bold;
}
listviewer[appearance=inset] > container > rows > row[selected] > * {
  background: transparent;
}
/*** ItemViewer ***/
itemviewer {
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
}
itemViewer > container {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
}
itemviewer > container > rows > row > output {
  cursor: default;
}
/*** Menu elements ***/
contextmenu {
  left: 0;
  top: 0;
  position: absolute;
  z-index: 10000;
  display: inline-block;
  margin: 0;
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  border-radius: 10px;
  border-color: transparent;
  border-width: 25px 15px 30px 15px;
  border-image: url(theme/ios/frame-popover.png) 25 15 30 15 repeat;
  -moz-border-image: url(theme/ios/frame-popover.png) 25 15 30 15 repeat;
  -webkit-border-image: url(theme/ios/frame-popover.png) 25 15 30 15 repeat;
}
contextmenu > container {
  margin: -18px -2px -13px -2px;
}
.mobile contextmenu {
  font-size: 150%;
}
contextmenu separator {
  display: block;
  height: 4px;
  overflow: hidden;
}
contextmenu group {
  display: block;
}
contextmenu action {
  display: block;
  width: 100%;
  margin: 2px 0px;
}
Xcontextmenu action:hover {
  background-color: #ffe933;
}
Xcontextmenu action:active {
  background-color: lightblue;
}
Xscontextmenu action[disabled] {
  opacity: .15;
  background-color: white !important;
  cursor: default;
}
Xcontextmenu action[icon] {
  background-repeat: no-repeat;
  background-position: 6px center;
  padding-left: 29px !important;
}
Xcontextmenu[showchecks] action {
  padding-right: 10px;
  border-right-width: 20px;
}
Xcontextmenu action[selected] {
  border-color: transparent;
  border-width: 2px 20px 0px 0px;
  border-image: url(theme/icons/menu-check.png) 2 20 0 0 stretch;
  -moz-border-image: url(theme/icons/menu-check.png) 2 20 0 0 stretch;
  -webkit-border-image: url(theme/icons/menu-check.png) 2 20 0 0 stretch;
}
/*** Toolbar ***/
toolbar {
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: horizontal;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-align: center;
  -webkit-box-align: center;
  -moz-box-align: center;
  height: 43px;
  padding: 0px 5px;
  width: 100%;
}
toolbar > * {
  display: block;
  vertical-align: middle;
}
toolbar > label {
  margin-left: 10px;
  margin-right: 10px;
}
toolbar[appearance~=top] {
  -moz-border-radius-topright: 5px;
  -moz-border-radius-topleft: 5px;
  -webkit-border-top-right-radius: 5px;
  -webkit-border-top-left-radius: 5px;
}
/* black toolbar */
toolbar[appearance~=black] {
  background: url(theme/ios/toolbar-black.png) repeat-x;
  color: white;
}
toolbar[appearance~=black] label {
  font-weight: bold;
}
/* "inset" appearance toolbar */
toolbar[appearance~=inset] {
  padding: 3px 10px 0 10px;
}
toolbar[appearance~=inset] label {
  line-height: 31px;
  font-weight: bold;
}
.gecko toolbar[appearance~=inset] label {
  line-height: 28px;
}
/*** Spring is a spacer which uses flex to greedily take up space ***/
spring {
  -webkit-box-flex: 1 !important;
  -moz-box-flex: 1 !important;
  box-flex: 1 !important;
}
/*** Spacer is a fixed-width spacer.  
 	 Default is 10px wide.  Use style='width:#px' to set width. 
***/
spacer {
  position: relative !important;
  display: inline-block;
  width: 10px;
}
/*** Tabs and TabBar ***/
tabgroup {
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
}
tabgroup > container {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
}
tabgroup > container > * {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
}
/* tabselector holds a bunch of actions which select tabgroup children */
tabselector {
  white-space: nowrap;
}
tabselector tab {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  display: inline-block;
  height: 30px;
  line-height: 29px;
  color: white;
  text-shadow: rgba(0, 0, 0, 0.4) 0px -1px 0;
  padding: 0px 20px;
  cursor: pointer;
  border-color: transparent;
  border-width: 0px 1px 0px 1px;
  border-image: url(theme/ios/segment-black.png) 0 1 0 1 repeat;
  -moz-border-image: url(theme/ios/segment-black.png) 0 1 0 1 repeat;
  -webkit-border-image: url(theme/ios/segment-black.png) 0 1 0 1 repeat;
}
tabselector tab:first-child {
  padding-left: 15px;
  border-color: transparent;
  border-width: 0px 1px 0px 6px;
  border-image: url(theme/ios/segment-black-start.png) 0 1 0 6 repeat;
  -moz-border-image: url(theme/ios/segment-black-start.png) 0 1 0 6 repeat;
  -webkit-border-image: url(theme/ios/segment-black-start.png) 0 1 0 6 repeat;
}
tabselector tab:last-child {
  padding-right: 15px;
  border-color: transparent;
  border-width: 0px 6px 0px 1px;
  border-image: url(theme/ios/segment-black-end.png) 0 6 0 1 repeat;
  -moz-border-image: url(theme/ios/segment-black-end.png) 0 6 0 1 repeat;
  -webkit-border-image: url(theme/ios/segment-black-end.png) 0 6 0 1 repeat;
}
tabselector tab[selected] {
  border-color: transparent;
  border-width: 0px 1px 0px 1px;
  border-image: url(theme/ios/segment-black-selected.png) 0 1 0 1 repeat;
  -moz-border-image: url(theme/ios/segment-black-selected.png) 0 1 0 1 repeat;
  -webkit-border-image: url(theme/ios/segment-black-selected.png) 0 1 0 1 repeat;
}
tabselector tab[selected]:first-child {
  border-color: transparent;
  border-width: 0px 1px 0px 6px;
  border-image: url(theme/ios/segment-black-selected-start.png) 0 1 0 6 repeat;
  -moz-border-image: url(theme/ios/segment-black-selected-start.png) 0 1 0 6 repeat;
  -webkit-border-image: url(theme/ios/segment-black-selected-start.png) 0 1 0 6 repeat;
}
tabselector tab[selected]:last-child {
  border-color: transparent;
  border-width: 0px 6px 0px 1px;
  border-image: url(theme/ios/segment-black-selected-end.png) 0 6 0 1 repeat;
  -moz-border-image: url(theme/ios/segment-black-selected-end.png) 0 6 0 1 repeat;
  -webkit-border-image: url(theme/ios/segment-black-selected-end.png) 0 6 0 1 repeat;
}
/** add tighter spacing to a tabselector by adding css class "tight" **/
tabselector.tight tab {
  padding: 0 10px;
}
/*** notice panels ***/
notice {
  display: block;
  text-align: center;
  font-weight: bold;
  font-size: 1.5em;
}
*[appearance~=inset] notice, notice[appearance=smoke] {
  -webkit-border-radius: 20px;
  -moz-border-radius: 20px;
  border-radius: 20px;
  opacity: .6;
  margin: 2em;
  padding: 2em;
  border: 5px solid white;
  background-color: black;
  color: white;
}
overlay[appearance~=blue] notice {
  color: white;
  padding: 50px;
}
/*** Overlay ***/
.horizontal section overlay {
  height: 768px;
}
.vertical section overlay {
  height: 1024px;
}
overlay {
  position: absolute;
  left: 0px;
  top: 0px;
  width: 100%;
  height: 100%;
  z-index: 10000;
}
overlay > mask > border {
  position: relative;
  display: block;
  width: 720px;
  -webkit-border-radius: 20px;
  -moz-border-radius: 20px;
  border-radius: 20px;
  min-height: 100px;
  max-height: 740px;
  margin-top: 10px;
}
overlay > mask > border > close {
  display: block;
  position: absolute;
  width: 42px;
  height: 42px;
  left: -20px;
  top: -20px;
  background: url(theme/ios/closebox-large.png) no-repeat;
  z-index: 10;
  cursor: pointer;
}
overlay.noclose > mask > border {
  margin-top: 0px;
}
overlay.noclose > mask > border > close {
  display: none;
}
overlay[appearance~=white] > mask > border {
  background-color: white;
}
.desktop overlay[appearance~=white] > mask > border {
  box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.4);
  -moz-box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.4);
  -webkit-box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.4);
}
overlay[appearance~=white].hasHeader > mask > border > header {
  border-bottom: 1px solid #999;
}
/*** blue overlay ***/
overlay[appearance~=blue] > mask > border {
  background-color: #1b1e2b;
  border: 3px solid white;
}
.desktop overlay[appearance~=blue] > mask > border {
  box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.4);
  -moz-box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.4);
  -webkit-box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.4);
}
overlay[appearance~=blue].hasHeader > mask > border > header {
  position: relative;
  top: -4px;
  -moz-border-radius-topright: 20px;
  -moz-border-radius-topleft: 20px;
  -webkit-border-top-right-radius: 20px;
  -webkit-border-top-left-radius: 20px;
  background-color: white;
}
overlay[appearance~=blue] > mask > border > container {
  padding: 10px;
}
overlay[appearance~=blue] label.head {
  color: white;
  text-align: left;
  font-size: 1.3em;
  font-weight: bold;
  margin: 1em;
}
/*** form overlay ***/
overlay[appearance~=form] > mask > border {
  background-color: #1b1e2b;
  border: 5px solid white;
  color: white;
}
.desktop overlay[appearance~=form] > mask > border {
  box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.4);
  -moz-box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.4);
  -webkit-box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.4);
}
overlay[appearance~=form].hasHeader > mask > border > header title {
  display: block;
  font-size: 2em;
  font-weight: bold;
  margin: 10px 0;
}
overlay[appearance~=form] > mask > border > container {
  -webkit-border-radius: 20px;
  -moz-border-radius: 20px;
  border-radius: 20px;
  background-color: #32384e;
  padding: 10px;
  color: white;
}
overlay[appearance~=form].hasHeader > mask > border > footer {
  padding: 5px 10px;
}
/*** form section ***/
section[appearance~=form] > container {
  padding: 10px;
}
section[appearance~=form] > container > row > *, section[appearance~=form] > container > rows > row > * {
  vertical-align: baseline;
}
section[appearance~=form] > container > row > label, section[appearance~=form] > container > rows > row > label {
  text-align: right;
  font-weight: bold;
  opacity: .5;
  padding-left: 10px;
  padding-right: 5px;
}
/*** panel ***/
/*** white panel/container ***/
panel[appearance~=white], container[appearance~=white] {
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  border-radius: 10px;
  box-shadow: inset 0px 1px 4px rgba(0, 0, 0, 0.5);
  -moz-box-shadow: inset 0px 1px 4px rgba(0, 0, 0, 0.5);
  -webkit-box-shadow: inset 0px 1px 4px rgba(0, 0, 0, 0.5);
  background: white;
  border: 1px solid #ccc;
  font-size: 1.3em;
}
panel[appearance~=white] > container > row, container[appearance~=white] > row {
  width: 100%;
}
panel[appearance~=white] > container > row > *, container[appearance~=white] > row > * {
  border-bottom: 1px solid #ccc;
  vertical-align: middle;
}
panel[appearance~=white] > container > row:last-child > *, container[appearance~=white] > row:last-child > * {
  border-bottom-width: 0;
}
panel[appearance~=white] > container > row > label, container[appearance~=white] > row > label {
  width: 100%;
  font-weight: bold;
}
panel[appearance~=white] {
  margin: 1em 10% 1.5em 10%;
  width: 80%;
  color: black;
}
panel[appearance~=white] > container > row > label {
  width: 100%;
  font-weight: bold;
  padding-left: 1em;
  padding-right: 1em;
}
/*** grey panel ***/
panel[appearance~=grey] {
  background-color: #40434f;
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
}
panel[appearance~=grey] toolbar {
  -moz-border-radius-topright: 5px;
  -moz-border-radius-topleft: 5px;
  -webkit-border-top-right-radius: 5px;
  -webkit-border-top-left-radius: 5px;
  height: 44px;
  background-image: url(theme/ios/toolbar-grey.png);
}
panel[appearance~=grey] toolbar action {
  border: 0px;
  margin-left: 10px;
  margin-right: -5px;
}
panel[appearance~=grey] toolbar label {
  text-shadow: rgba(255, 255, 255, 0.4) 1px 1px 0;
  font-size: 1.6em;
  color: #717880;
  font-weight: bold;
  text-align: center;
}
/*** blue panel ***/
panel[appearance~=blue] > header {
  background-color: #444a63;
  -moz-border-radius-topright: 10px;
  -moz-border-radius-topleft: 10px;
  -webkit-border-top-right-radius: 10px;
  -webkit-border-top-left-radius: 10px;
  color: white;
  padding: 0 10px;
  line-height: 40px;
  text-align: center;
  font-weight: bold;
}
panel[appearance~=blue] > container {
  -moz-border-radius-bottomright: 10px;
  -moz-border-radius-bottomleft: 10px;
  -webkit-border-bottom-right-radius: 10px;
  -webkit-border-bottom-left-radius: 10px;
  background: #32384e;
  color: white;
}
/*** popup panel (kinda a hybrid -- UI guidelines? ***/
listSelector {
  position: absolute;
  display: block;
  border-color: transparent;
  border-width: 50px 15px 15px 15px;
  border-image: url(theme/ios/popup-black.png) 50 15 15 15 repeat;
  -moz-border-image: url(theme/ios/popup-black.png) 50 15 15 15 repeat;
  -webkit-border-image: url(theme/ios/popup-black.png) 50 15 15 15 repeat;
  z-index: 10000;
}
listSelector > container {
  margin: -20px -5px -5px;
}
listSelector > .arrow {
  position: absolute;
  left: 0;
  top: -48px;
  width: 100%;
  height: 20px;
  background: url(theme/ios/popup-black-arrow-top.png) no-repeat top center;
}
listSelector label {
  white-space: nowrap;
  padding: 8px 60px 8px 12px;
}
listSelector row[selected] label {
  color: #1a4c8b;
  background: url(theme/ios/menu-check.png) no-repeat right center;
}
listSelectorButton {
  padding: 10px 40px 10px 10px;
  color: #1a4c8b;
  background: url(theme/ios/menu-more.png) no-repeat right center;
  white-space: nowrap;
}
/*** CheckSwitch - iOS style checkbox ***/
checkswitch {
  height: 27px;
}
checkswitch > span {
  position: relative;
  display: inline-block;
  width: 94px;
  height: 27px;
  overflow: hidden;
  vertical-align: middle;
  cursor: pointer;
  margin: 10px;
}
checkswitch div {
  display: inline-block;
  position: absolute;
  height: 27px;
  width: 149px;
  background: url(theme/ios/switch-on.png), url(theme/ios/switch-off.png);
  background-repeat: no-repeat;
  -webkit-transition: left ease-in 200ms;
}
checkswitch div.off {
  left: -55px;
  background: url(theme/ios/switch-off.png) no-repeat;
}
checkswitch div.on {
  left: 0px;
  background: url(theme/ios/switch-on.png) no-repeat;
}
/*** WebView -- full screen embedded web browser ***/
webview {
  position: relative;
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
}
webview > iframe {
  border: 0px;
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
  background: white;
}
/*** Split pane (divides into horizontally or vertically stacked panes) ***/
splitter {
  position: relative;
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
}
splitter[direction=horizontal] {
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: horizontal;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
}
splitter[direction=horizontal][visible=no] {
  display: none !important;
}
splitter > splitbar {
  position: absolute;
  z-index: 2;
  left: 10px;
  right: 0;
  height: 10px;
  background-color: green;
}
splitter[direction=horizontal] > splitbar {
  top: 0;
  right: auto;
  height: 100%;
}
/*** Textfield -- managed input field w/error semantics/etc ***/
textfield {
  display: inline-block;
}
textfield[multiline] {
  position: relative;
  display: box !important;
  display: -webkit-box !important;
  display: -moz-box !important;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-align: stretch;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
}
textfield > input {
  width: 100%;
}
textfield > textarea {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
}
textfield.focus input {
  background-color: #fffec7;
}
textfield.error input {
  background-color: pink;
}
textfield > message {
  display: block;
  margin-bottom: 3px;
  height: 16px;
}
textfield > message.hint {
  color: #666;
  font-style: italic;
  font-size: 90%;
  padding-left: 1em;
  padding-right: 1em;
}
textfield > message.error {
  color: darkred;
  font-weight: bold;
  padding-left: 18px;
  background: url(theme/silk/critical.png) left center no-repeat;
  line-height: 16px;
}
/* specific type/apperance management */
textfield[type=number] input {
  text-align: right;
  width: 8em;
}
textfield[appearance~=small] input {
  width: 5em;
}
textfield[type=currency] input {
  background-image: url(theme/widgets/field-currency-dollar.png);
  background-position: 3px center;
  background-repeat: no-repeat;
  padding-left: 12px;
  width: 8em;
  text-align: right;
}
textfield[type=url] input {
  width: 100%;
}
/*** Icons ***/
/* icon element -- use this inside a button with border-image */
icon {
  display: inline-block;
  position: relative;
  background-position: left center;
  background-repeat: no-repeat;
  cursor: pointer;
  vertical-align: middle;
}
icon[disabled] {
  opacity: .1;
  cursor: default;
}
/* Icon backgrounds -- attach by having a [icon] attribute on some element.
	   It's up to your calling context to set where/how the icon shows up.			*/
/* silk icons -- they don't match but there are a lot of them! */
*[icon|=silk] > icon {
  width: 16px;
  height: 16px;
}
*[icon=silk-add] > icon {
  background-image: url(theme/silk/add.png);
}
*[icon=silk-down] > icon {
  background-image: url(theme/silk/down.png);
}
*[icon=silk-horizontal] > icon {
  background-image: url(theme/silk/horizontal.png);
}
*[icon=silk-large] > icon {
  background-image: url(theme/silk/large.png);
}
*[icon=silk-left] > icon {
  background-image: url(theme/silk/left.png);
}
*[icon=silk-link] > icon {
  background-image: url(theme/silk/link.png);
}
*[icon=silk-medium] > icon {
  background-image: url(theme/silk/medium.png);
}
*[icon=silk-moveBackwards] > icon {
  background-image: url(theme/silk/moveBackwards.png);
}
*[icon=silk-moveForwards] > icon {
  background-image: url(theme/silk/moveForwards.png);
}
*[icon=silk-moveToBack] > icon {
  background-image: url(theme/silk/moveToBack.png);
}
*[icon=silk-moveToFront] > icon {
  background-image: url(theme/silk/moveToFront.png);
}
*[icon=silk-pencil] > icon {
  background-image: url(theme/silk/pencil.png);
}
*[icon=silk-person] > icon {
  background-image: url(theme/silk/person.png);
}
*[icon=silk-refresh] > icon {
  background-image: url(theme/silk/refresh.png);
}
*[icon=silk-remove] > icon {
  background-image: url(theme/silk/remove.png);
}
*[icon=silk-right] > icon {
  background-image: url(theme/silk/right.png);
}
*[icon=silk-small] > icon {
  background-image: url(theme/silk/small.png);
}
*[icon=silk-save] > icon {
  background-image: url(theme/silk/save.png);
}
*[icon=silk-up] > icon {
  background-image: url(theme/silk/up.png);
}
*[icon=silk-vertical] > icon {
  background-image: url(theme/silk/vertical.png);
}
*[icon=silk-window] > icon {
  background-image: url(theme/silk/window.png);
}
*[icon=silk-windowChart] > icon {
  background-image: url(theme/silk/windowChart.png);
}
*[icon=silk-windowSwitch] > icon {
  background-image: url(theme/silk/windowSwitch.png);
}
*[icon=silk-windowTile] > icon {
  background-image: url(theme/silk/windowTile.png);
}
/* light icons */
*[icon=light-action] > icon {
  background-image: url(theme/ios/icon-light-action.png);
  width: 23px;
  height: 18px;
}
*[icon=light-left] > icon {
  background-image: url(theme/ios/icon-light-left.png);
  width: 16px;
  height: 19px;
  left: -1px;
}
*[icon=light-right] > icon {
  background-image: url(theme/ios/icon-light-right.png);
  width: 16px;
  height: 19px;
  left: 1px;
}
/* circle icons */
*[icon|=circle] > icon {
  width: 29px;
  height: 29px;
}
*[icon=circle-add-blue] > icon {
  background-image: url(theme/ios/circle-add-blue.png);
}
*[icon=circle-add-green] > icon {
  background-image: url(theme/ios/circle-add-green.png);
}
*[icon=circle-checked-red] > icon {
  background-image: url(theme/ios/circle-checked-red.png);
}
*[icon=circle-delete-red] > icon {
  background-image: url(theme/ios/circle-delete-red.png);
}
*[icon=circle-error-red] > icon {
  background-image: url(theme/ios/circle-error-red.png);
}
*[icon=circle-error-red] > icon {
  background-image: url(theme/ios/circle-error-red.png);
}
*[icon=circle-left-blue] > icon {
  background-image: url(theme/ios/circle-left-blue.png);
}
*[icon=circle-minus-blue] > icon {
  background-image: url(theme/ios/circle-minus-blue.png);
}
*[icon=circle-minus-red] > icon {
  background-image: url(theme/ios/circle-minus-red.png);
}
*[icon=circle-right-blue] > icon {
  background-image: url(theme/ios/circle-right-blue.png);
}
/* status dots */
*[icon|=dot] > icon, icon[icon|=dot] {
  width: 16px;
  height: 16px;
}
*[icon=dot-blue] > icon, icon[icon=dot-blue] {
  background-image: url(theme/ios/dot-blue.png);
}
*[icon=dot-gold] > icon, icon[icon=dot-gold] {
  background-image: url(theme/ios/dot-gold.png);
}
*[icon=dot-green] > icon, icon[icon=dot-green] {
  background-image: url(theme/ios/dot-green.png);
}
*[icon=dot-grey] > icon, icon[icon=dot-grey] {
  background-image: url(theme/ios/dot-grey.png);
}
*[icon=dot-red] > icon, icon[icon=dot-red] {
  background-image: url(theme/ios/dot-red.png);
}
