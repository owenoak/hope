Properties vs. expressions
	- properties are things we rememeber, and can read from xml
		- all properties are simple getters/setters w/o extra arguments
		- properties are stored in a 'properties' object so we can export them easily
		- properties without special getters are also stored directly on the object
		
	- expressions are calculated values that we don't remember on our xml
		- expressions can have extra arguments
		- if we don't specify <getter>/<setters>, 
			the supplied code is a <getter> and the expression is read-only

	- we won't use getters/setters because 
		- you have to have a getter if you have a setter
		- we don't want to have "_blah" properties
		- because we're 'compiling', we can know which properties are set directly
			and which use getters, so we should be able to optimize this out (?)
		
	- for the person using a class in english, they don't have to distinguish between
		properties and expressions in the specification -- they use them the same way
		(does it matter for the JS?)
