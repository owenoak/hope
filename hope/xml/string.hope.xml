<!-- String adaptor.

	 Notes: 
	 		- all operations are 1-based! 
			- "pattern" == regular expression
-->
<thing type='string' alias='text'>
	<!-- string comparison conditions -->
	<mixin name='string condition'>
		<condition syntax='(string) {contains|contain} (other string)'/>
		<condition syntax='(string) {does not contain|do not contain} (thing)'/>
		<condition syntax='(string) {starts|begins|start|begin} with (thing)'/>
		<condition syntax='(string) {ends with} (thing)'/>
		<condition syntax='matches (pattern)'/>
	</mixin>
	
	<!-- concatenation -->
	<expression syntax='(string) {+|&} (other string)'/>
	<expression syntax='(string) {++|&&} (other string)'/>
	<expression syntax='(string) (number) times'/>

	<!-- length and individual characters -->
	<expression syntax='length'/>
	<expression syntax='char[acter] at (number)'/>
	<expression syntax='index of (other string)'/>
	<expression syntax='last index of (other string)'/>
	<expression syntax='indexes of (other string)'/>

	<!-- substring -->
	<expression syntax='substring of (string) [from] (start) [to (end)]'/>
	<expression syntax='trim (string)'/>
	<expression syntax='trim left [of] (string)'/>
	<expression syntax='trim right [of] (string)'/>
	<expression syntax='truncate (string) [to] (number) [of {chars|characters}]'/>

	<!-- case conversion -->
	<expression syntax='{to|as|in} upper case'/>
	<expression syntax='{to|as|in} lower case'/>
	<expression syntax='{to|as|in} camel case'/>
	<expression syntax='dasherize (string)'/>

	<!-- splitting into chunks -->
	<expression syntax='split (string) {on|by|with} (delimiter)'/>
	<expression syntax='split (string) [into|as] {params|parameters}'>	<!-- url parameters -->
	<expression syntax='split (string) [into|as] attributes'>			<!-- xml attributes -->

	<!-- converting to html, etc -->
	<expression syntax='as html'/>	<!-- make HTML safe -->
	<expression syntax='quotify'/>	<!-- make safe to put inside double-quotes -->

	<!-- regular expressions == "patterns" -->
	<expression syntax='match (pattern)'/>	<!-- syntax? -->
	
</adaptor>
