<thing name='operation'>
	<command syntax='execute [with (options)]'/>
	<property name='url' type='url'/>
	<property name='status' values='http status' save='no'><!-- will be set to an Error if appropriate -->
	<property name='method' default='GET' type='http methods'/>
	<property name='cache results' type='flag' default='true'/>
	<property name='input type' default='text'/>
	<property name='input' save='no'/><!-- input data -->
	<property name='input template' type='template'/><!-- template to use to generate input -->
	<property name='output type' default='text'/>
	<property name='output' save='no'/><!-- actual data that was loaded -->
	<event name='done' with='output and file'/>
	<event name='error' with='error and file'/>
</thing>


<!--Mixin to add a load operation to something. -->
<mixin name='load operation'>
	<property name='loader' type='operation'/>
	<alias name='load' for='execute my loader'/>
	<alias name='url' for='url of my loader'/>
	<alias name='status' for='status of my loader'>
	<alias name='method' for='method of my loader'/>
	<alias name='cache' for='cache of my loader'/>
	<alias name='input' for='input of my loader'/>
	<alias name='load template' for='input template of my loader'/>
	<alias name='data type' for='output type of my loader'/>
	<alias name='data' for='output of my loader'/>
	<alias name='loaded' for='event done for my loader'/>
	<alias name='load error' for='event done for my loader'/>
</mixin>


<!-- subclass as save operation so we can customize the api -->
<mixin name='save operation'>
	<property name='saver' type='operation'/>
	<alias name='save' for='execute my saver'/>
	<alias name='url' for='url of my saver'/>
	<alias name='status' for='status of my saver'>
	<alias name='method' for='method of my saver'/>
	<alias name='cache' for='cache of my saver'/>
	<alias name='input' for='input of my saver'/>
	<alias name='save template' for='input template of my saver'/>
	<alias name='data type' for='output type of my saver'/>
	<alias name='data' for='output of my saver'/>
	<alias name='saveed' for='event done for my saver'/>
	<alias name='save error' for='event done for my saver'/>
</thing>

<thing name='file'>
	<!-- alias 'load' command and all loader properties as friendlier terms -->
	<property name='loader' type='operation'/>
	<alias name='load' for='execute my loader'/>
	<alias name='url' for='the url of loader'/>
	<alias name='method' for='method of my loader'/>
	<alias name='cache' for='cache of my loader'/>
	<alias name='input' for='input of my loader'/><!-- input data -->
	<alias name='load template' for='input template of my loader'/><!-- template to use to generate input -->
	<alias name='output type' for='output type of my loader'/>
	<alias name='output' for='output of my loader'/><!-- actual data that was loaded -->
	<alias name='status' for='status of my loader'><!-- will be set to an Error if appropriate -->

	<property name='saver' type='operation'/>
	<alias name='save' for='execute my saver'/>
	<alias name='save url' for='the url of saver'/>
	<alias name='save method' for='method of my saver'/>
	<alias name='input' for='input of my saver'/><!-- input data -->
	<alias name='load template' for='input template of my saver'/><!-- template to use to generate input -->
	<alias name='output type' for='output type of my saver'/>
	<alias name='output' for='output of my saver'/><!-- actual data that was loaded -->
	<alias name='status' for='status of my saver'><!-- will be set to an Error if appropriate -->


	<property name='deleter' type='operation'>
</thing>

<thing name='file'>
	<property name='url' type='url'/>
	<property name='cache' type='flag' default='true'/>
	<property name='load method' default='GET' type='http methods'/>
	<property name='load as' default='text'/>
	<property name='data' save='no'/><!-- actual data that was loaded -->

	<command name='load [as load format]'/>
	<property name='loaded' type='flag' default='false' save='no'>
	<property name='load status' values='http status' save='no'>
	<property name='load error' type='string' save='no'/>
	<event name='loaded' with='data and file'/>
	<event name='load error' with='error and file'/>
	
	<command name='save [as (format)]'/>
	<property name='save url' type='url'/><!-- if null, we save to the same address -->
	<property name='save method' default='PUT' type='http methods'/>
	<property name='save status' values='http status' save='no'>
	<property name='save error' type='string' save='no'/>
	<event name='saved' with='data and request'/>
	<event name='save error' with='error and file'/>

	<!-- HMM, conflict with the JS 'delete' keyword -->
	<property name='delete url' type='url'/><!-- if null, we delete at the same address -->
	<command name='delete [as (format)]'/>
	<property name='delete method' default='DELETE' type='http methods'/>
	<property name='delete status' values='http status' delete='no'>
	<property name='delete error' type='string' delete='no'/>
	<event name='deleted' with='data and request'/>
	<event name='delete error' with='error and file'/>

	<!-- save format -->
	<loadFormat type='text'/>
	<saveFormat type='text'/>
</thing>

<thing name='parseable file' isa='file'>
	<property name='auto[matically] parse'/>
	<property name='parse as'/><!-- type to parse as -->
	<command name='parse [as (type)'/>
</thing>


<thing name='xml file' isa='parseable file'>
	<property name='auto[matically] parse'/>
	<property name='parse as'/><!-- type to parse as -->
</thing>
